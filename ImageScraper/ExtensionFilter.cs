//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;

namespace ImageScraper
{
	public class ExtensionFilter
	{
		private ICollection<string> _extensions;

		// Inject dependencies
		public ExtensionFilter (ICollection<string> extensions)
		{
			_extensions = new SortedSet<string> ();
			foreach (var extension in extensions) {
				this._extensions.Add (extension.ToUpper ());
			}
		}

		// Only yields URIs whose extensions exist in the extensions list
		public IEnumerable<Uri> Filter(IEnumerable<Uri> input) {
			foreach (var uri in input) {
				var filename = uri.Segments[uri.Segments.Length-1];
				var extension = System.IO.Path.GetExtension (filename).Substring (1);
				if (this._extensions.Contains (extension.ToUpper())) {
					yield return uri;
				}
			}
		}
	}
}

